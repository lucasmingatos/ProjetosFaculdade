/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.dao.TenisDAO;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.table.DefaultTableModel;
import model.Tenis;

/**
 *
 * @author Fersperge
 */
public class FormPesquisarTenis extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormPesquisarTenis
     */
    public FormPesquisarTenis() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdbNome = new javax.swing.JRadioButton();
        txtPesquisar = new javax.swing.JTextField();
        scpResultados = new javax.swing.JScrollPane();
        tabResultados = new javax.swing.JTable();
        rdbId = new javax.swing.JRadioButton();

        rdbNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdbNome.setText("Nome");

        txtPesquisar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        tabResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabResultadosMouseClicked(evt);
            }
        });
        scpResultados.setViewportView(tabResultados);

        rdbId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdbId.setText("Id");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPesquisar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdbId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbNome)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scpResultados, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbId)
                    .addComponent(rdbNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scpResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased

        List<Tenis> lista = null;
        String chave = txtPesquisar.getText();

        if (rdbId.isSelected() && !chave.isEmpty()){
            lista = new TenisDAO().pesquisarPorId(chave);
        }else if (rdbNome.isSelected()){
            lista = new TenisDAO().pesquisarPorNome(chave);
        }

        configurarTabela();
        preencherTabela(lista);
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void tabResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabResultadosMouseClicked

        /*if (evt.getClickCount() == 2){

            int linha = tabResultados.getSelectedRow();
            Tenis e = new Tenis (
                Integer.parseInt(tabResultados.getValueAt(linha, 0).toString()),
                tabResultados.getValueAt(linha, 1).toString()
            );

            FormCadastrarTenis f = new FormCadastrarTenis(e);
            getDesktopPane().add(f);
            f.setVisible(true);

            this.dispose();
        }*/
    }//GEN-LAST:event_tabResultadosMouseClicked
     private void configurarTabela() {
        DefaultTableModel m = new DefaultTableModel(){
        
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        
        };
        
        m.addColumn("Id");
        m.addColumn("Nome");
        tabResultados.setModel(m);
    }    
    private void configurarFormulario() {
        this.setTitle("Pesquisar Tenis");
        this.setMaximizable(false);
        this.setIconifiable(false);
        this.setClosable(true);

        txtPesquisar.requestFocus();

        ButtonGroup bg = new ButtonGroup();
        bg.add(rdbId);
        bg.add(rdbNome);
        
        rdbNome.setSelected(true);
        configurarTabela();
    }
    
    
    private void preencherTabela(List<Tenis> lista) {
        if (lista != null) {
            if (lista.size() > 0) {
                configurarTabela();
                DefaultTableModel m = (DefaultTableModel) 
                    tabResultados.getModel();
                for (Tenis e : lista) {
                    m.addRow(new Object[]{
                        e.getId(),
                        e.getNome()
                    });
                }
                tabResultados.setModel(m);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton rdbId;
    private javax.swing.JRadioButton rdbNome;
    private javax.swing.JScrollPane scpResultados;
    private javax.swing.JTable tabResultados;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
