/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aula05;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 826274
 */
public class FormPesquisarAluno extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormPesquisarAluno
     */
    public FormPesquisarAluno() {
        initComponents();
        configurarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome1 = new javax.swing.JLabel();
        txtPesquisarNome = new javax.swing.JTextField();
        spnTabela = new javax.swing.JScrollPane();
        tabPesquisar = new javax.swing.JTable();

        lblNome1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblNome1.setText("Nome");

        txtPesquisarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarNomeActionPerformed(evt);
            }
        });
        txtPesquisarNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarNomeKeyPressed(evt);
            }
        });

        tabPesquisar.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        tabPesquisar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spnTabela.setViewportView(tabPesquisar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNome1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtPesquisarNome))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(spnTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarNomeActionPerformed

    private void txtPesquisarNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarNomeKeyPressed
        pesquisarPorNome(txtPesquisarNome.getText());
    }//GEN-LAST:event_txtPesquisarNomeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblNome1;
    private javax.swing.JScrollPane spnTabela;
    private javax.swing.JTable tabPesquisar;
    private javax.swing.JTextField txtPesquisarNome;
    // End of variables declaration//GEN-END:variables

    private void configurarFormulario(){
        this.setTitle("Pesquisar Aluno");
        this.setResizable(false);
        this.setClosable(true);
        this.setMaximizable(false);
        this.setIconifiable(false);
        
        configurarTabela();
        preencherTabela();
        
    }
    
    private void configurarTabela(){
        DefaultTableModel m = new DefaultTableModel(){
        
        @Override
        public boolean isCellEditable(int row, int column){
            return false;
        }
      };    
      m.addColumn("CÃ³digo");
      m.addColumn("Nome");
      m.addColumn("Curso");
      tabPesquisar.setModel(m);
    }
    
    private void preencherTabela(){
        
        if(FormMDI.lista != null){
            if(FormMDI.lista.size() > 0){
                DefaultTableModel m = (DefaultTableModel)
                        tabPesquisar.getModel();
                
                for(Aluno a : FormMDI.lista){
                    m.addRow(
                        new Object[]{
                            a.getCodigo(),
                            a.getNome(),
                            a.getCurso(),
                        }
                    );
                }
                tabPesquisar.setModel(m);
            }
        }
    }
    
    private void pesquisarPorNome(String nome){
        if (nome.isEmpty()){
            preencherTabela();
        }else{
            
            if (FormMDI.lista != null){
                if (FormMDI.lista.size() > 0){
                    configurarTabela();
                    DefaultTableModel m = (DefaultTableModel) tabPesquisar.getModel();
                    for(Aluno a : FormMDI.lista){
                        
                        if (a.getNome().toUpperCase().contains(nome.toUpperCase())){
                            m.addRow(
                                    new Object[]{
                                        a.getCodigo(),
                                        a.getNome(),
                                        a.getCurso()
                                    }
                            );
                        }
                    }
                    tabPesquisar.setModel(m);
                }
            }
        }
    }
}
