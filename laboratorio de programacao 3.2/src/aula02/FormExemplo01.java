/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aula02;

import java.awt.Font;
import javax.swing.ButtonGroup;

/**
 *
 * @author prodrigo
 */
public class FormExemplo01 extends javax.swing.JFrame {

    private Font fonte;
    
    public FormExemplo01() {
        initComponents();
        configurarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTexto = new javax.swing.JTextField();
        lblTexto = new javax.swing.JLabel();
        pnEstilo = new javax.swing.JPanel();
        ckbNegrito = new javax.swing.JCheckBox();
        ckbItalico = new javax.swing.JCheckBox();
        pnFonte = new javax.swing.JPanel();
        rdbArial = new javax.swing.JRadioButton();
        rdbTahoma = new javax.swing.JRadioButton();
        rdbTimes = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTexto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtTexto.setText("Este é um exemplo de texto");

        lblTexto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTexto.setText("Texto");

        pnEstilo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estilo", 0, 0, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        ckbNegrito.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ckbNegrito.setText("Negrito");
        ckbNegrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbNegritoActionPerformed(evt);
            }
        });

        ckbItalico.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ckbItalico.setText("Itálico");
        ckbItalico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbItalicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnEstiloLayout = new javax.swing.GroupLayout(pnEstilo);
        pnEstilo.setLayout(pnEstiloLayout);
        pnEstiloLayout.setHorizontalGroup(
            pnEstiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEstiloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnEstiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbNegrito)
                    .addComponent(ckbItalico))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        pnEstiloLayout.setVerticalGroup(
            pnEstiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEstiloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbNegrito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbItalico)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnFonte.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fonte", 0, 0, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        rdbArial.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        rdbArial.setText("Arial");
        rdbArial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArialActionPerformed(evt);
            }
        });

        rdbTahoma.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        rdbTahoma.setText("Tahoma");
        rdbTahoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTahomaActionPerformed(evt);
            }
        });

        rdbTimes.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        rdbTimes.setText("Times New Roman");
        rdbTimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTimesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnFonteLayout = new javax.swing.GroupLayout(pnFonte);
        pnFonte.setLayout(pnFonteLayout);
        pnFonteLayout.setHorizontalGroup(
            pnFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFonteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbArial)
                    .addComponent(rdbTahoma)
                    .addComponent(rdbTimes))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnFonteLayout.setVerticalGroup(
            pnFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFonteLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(rdbArial)
                .addGap(15, 15, 15)
                .addComponent(rdbTahoma)
                .addGap(15, 15, 15)
                .addComponent(rdbTimes)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTexto)
                    .addComponent(txtTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnEstilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnFonte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(lblTexto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnFonte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnEstilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbArialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArialActionPerformed
        aplicarFormatacao();
    }//GEN-LAST:event_rdbArialActionPerformed

    private void rdbTahomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTahomaActionPerformed
        aplicarFormatacao();
    }//GEN-LAST:event_rdbTahomaActionPerformed

    private void rdbTimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTimesActionPerformed
        aplicarFormatacao();
    }//GEN-LAST:event_rdbTimesActionPerformed

    private void ckbNegritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbNegritoActionPerformed
        aplicarFormatacao();
    }//GEN-LAST:event_ckbNegritoActionPerformed

    private void ckbItalicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbItalicoActionPerformed
        aplicarFormatacao();
    }//GEN-LAST:event_ckbItalicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormExemplo01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormExemplo01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormExemplo01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormExemplo01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormExemplo01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckbItalico;
    private javax.swing.JCheckBox ckbNegrito;
    private javax.swing.JLabel lblTexto;
    private javax.swing.JPanel pnEstilo;
    private javax.swing.JPanel pnFonte;
    private javax.swing.JRadioButton rdbArial;
    private javax.swing.JRadioButton rdbTahoma;
    private javax.swing.JRadioButton rdbTimes;
    private javax.swing.JTextField txtTexto;
    // End of variables declaration//GEN-END:variables


    private void configurarFormulario(){
        this.setTitle("Exemplo Check e Radio");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        
        txtTexto.setEditable(false);
        
        //Criação do Grupo de Botões
        ButtonGroup bg = new ButtonGroup();
        bg.add(rdbArial);
        bg.add(rdbTahoma);
        bg.add(rdbTimes);
        
        //definir o item "Tahoma" como selecionado
        rdbTahoma.setSelected(true);
        
        //definir fonte atual
        this.fonte = new Font("Tahoma", 0, 36);
        
    }
    
    private void aplicarFormatacao(){

        int negrito = 0;
        int italico = 0;
        if (ckbNegrito.isSelected()){
            negrito = Font.BOLD;
        }else{
            negrito = Font.PLAIN;
        }

        if (ckbItalico.isSelected()){
            italico = Font.ITALIC;
        }else{
            italico = Font.PLAIN;
        }
        
        if ( rdbArial.isSelected() ){
            this.fonte = new Font("Arial", negrito+italico, 36);
        }else if (rdbTahoma.isSelected()){
            this.fonte = new Font("Tahoma", negrito+italico, 36);
        }else if (rdbTimes.isSelected()){
            this.fonte = new Font("Times New Roman", negrito+italico, 36);
        }
        txtTexto.setFont(this.fonte);
    }
    
    
    

}
