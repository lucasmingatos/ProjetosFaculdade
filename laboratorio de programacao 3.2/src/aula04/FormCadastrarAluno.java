/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aula04;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 826274
 */
public class FormCadastrarAluno extends javax.swing.JFrame {
    
    private List<Aluno> lista;
    /**
     * Creates new form FormCadastroAluno
     */
    public FormCadastrarAluno() {
        initComponents();
        configurarFormulario();
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabCadastrarAluno = new javax.swing.JTabbedPane();
        pnCadastrar = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblCurso = new javax.swing.JLabel();
        cbxCurso = new javax.swing.JComboBox<>();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        pnGerenciar = new javax.swing.JPanel();
        btnImportar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        pnPesquisar = new javax.swing.JPanel();
        lblNome1 = new javax.swing.JLabel();
        txtPesquisarNome = new javax.swing.JTextField();
        spnTabela = new javax.swing.JScrollPane();
        tabPesquisar = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabCadastrarAluno.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        tabCadastrarAluno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabCadastrarAlunoStateChanged(evt);
            }
        });

        lblCodigo.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblCodigo.setText("CÃ³digo");

        txtCodigo.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N

        lblNome.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblNome.setText("Nome");

        txtNome.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblCurso.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblCurso.setText("Curso");

        cbxCurso.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        cbxCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnNovo.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnCadastrarLayout = new javax.swing.GroupLayout(pnCadastrar);
        pnCadastrar.setLayout(pnCadastrarLayout);
        pnCadastrarLayout.setHorizontalGroup(
            pnCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNome, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnCadastrarLayout.createSequentialGroup()
                        .addGroup(pnCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblCodigo)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCurso)
                            .addGroup(pnCadastrarLayout.createSequentialGroup()
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(btnSalvar)))
                        .addGap(0, 308, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnCadastrarLayout.setVerticalGroup(
            pnCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(lblCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(pnCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovo))
                .addContainerGap())
        );

        tabCadastrarAluno.addTab("Cadastrar", pnCadastrar);

        btnImportar.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnImportar.setText("Importar");
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });

        btnExportar.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGerenciarLayout = new javax.swing.GroupLayout(pnGerenciar);
        pnGerenciar.setLayout(pnGerenciarLayout);
        pnGerenciarLayout.setHorizontalGroup(
            pnGerenciarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGerenciarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnGerenciarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExportar)
                    .addComponent(btnImportar))
                .addContainerGap(381, Short.MAX_VALUE))
        );
        pnGerenciarLayout.setVerticalGroup(
            pnGerenciarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGerenciarLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(btnImportar)
                .addGap(26, 26, 26)
                .addComponent(btnExportar)
                .addContainerGap(208, Short.MAX_VALUE))
        );

        tabCadastrarAluno.addTab("Gerenciar", pnGerenciar);

        lblNome1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblNome1.setText("Nome");

        txtPesquisarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarNomeActionPerformed(evt);
            }
        });
        txtPesquisarNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarNomeKeyPressed(evt);
            }
        });

        tabPesquisar.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        tabPesquisar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spnTabela.setViewportView(tabPesquisar);

        javax.swing.GroupLayout pnPesquisarLayout = new javax.swing.GroupLayout(pnPesquisar);
        pnPesquisar.setLayout(pnPesquisarLayout);
        pnPesquisarLayout.setHorizontalGroup(
            pnPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGroup(pnPesquisarLayout.createSequentialGroup()
                        .addComponent(lblNome1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtPesquisarNome))
                .addContainerGap())
        );
        pnPesquisarLayout.setVerticalGroup(
            pnPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spnTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
        );

        tabCadastrarAluno.addTab("Pesquisar", pnPesquisar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabCadastrarAluno)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabCadastrarAluno)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        
        statusControles(true);
        txtCodigo.requestFocus();
        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Aluno a = new Aluno();
        a.setCodigo(Integer.parseInt(txtCodigo.getText()));
        a.setNome(txtNome.getText());
        a.setCurso(cbxCurso.getSelectedItem().toString());
        lista.add(a);
        
        JOptionPane.showMessageDialog(null, "OperaÃ§Ã£o realizada com sucesso!");
        statusControles(false);
        txtCodigo.setText("");
        txtNome.setText("");
        cbxCurso.setSelectedIndex(0);
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void tabCadastrarAlunoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabCadastrarAlunoStateChanged
        
        if(tabCadastrarAluno.getSelectedIndex() == 1){
            preencherTabela();
        }
    }//GEN-LAST:event_tabCadastrarAlunoStateChanged

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        final String PATH = System.getenv().get("USERPROFILE") + "\\Desktop\\";
        final String FILE = PATH + "dados.csv";
        
        try{
            FileWriter fw = new FileWriter(new File(FILE));
            BufferedWriter bw = new BufferedWriter(fw);
            for (Aluno a : lista){
                bw.write(a.getCodigo() + ";");
                bw.write(a.getNome() + ";");
                bw.write(a.getCurso() + "\n");
            }
            bw.close();
        }catch (Exception e){
            System.out.println("ERRO: " + e.getMessage());
        }
        
        JOptionPane.showMessageDialog(null, "ExportaÃ§Ã£o realizada com sucesso!");
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
       final String PATH = System.getenv().get("USERPROFILE") + "\\Desktop\\";
        final String FILE = PATH + "dados.csv";
        
        try{
            FileReader fr = new FileReader(new File(FILE));
            BufferedReader br = new BufferedReader(fr);
            String linha = "";
            while((linha = br.readLine())!=null){
                String dados[] = linha.split(";");
                Aluno a = new Aluno(
                    Integer.parseInt(dados[0]),
                    dados[1],
                    dados[2]
                );
                lista.add(a);
            }
            br.close();
        }catch (Exception e){
            System.out.println("ERRO: " + e.getMessage());
        }
        
        JOptionPane.showMessageDialog(null, "ImportaÃ§Ã£o realizada com sucesso!");
    }//GEN-LAST:event_btnImportarActionPerformed

    private void txtPesquisarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarNomeActionPerformed

    private void txtPesquisarNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarNomeKeyPressed
        pesquisarPorNome(txtPesquisarNome.getText());
    }//GEN-LAST:event_txtPesquisarNomeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadastrarAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnImportar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbxCurso;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCurso;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JPanel pnCadastrar;
    private javax.swing.JPanel pnGerenciar;
    private javax.swing.JPanel pnPesquisar;
    private javax.swing.JScrollPane spnTabela;
    private javax.swing.JTabbedPane tabCadastrarAluno;
    private javax.swing.JTable tabPesquisar;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisarNome;
    // End of variables declaration//GEN-END:variables
    
    private void configurarFormulario(){
        this.setTitle("Cadastrar Aluno");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        
        lista = new ArrayList<>();
        
        configurarTabela();
        configurarCombo();
        statusControles(false);
    }
    
    private void configurarTabela(){
        DefaultTableModel m = new DefaultTableModel(){
        
        @Override
        public boolean isCellEditable(int row, int column){
            return false;
        }
      };    
      m.addColumn("CÃ³digo");
      m.addColumn("Nome");
      m.addColumn("Curso");
      tabPesquisar.setModel(m);
    }
    
    private void statusControles(boolean status){
        txtCodigo.setEnabled(status);
        txtNome.setEnabled(status);
        cbxCurso.setEnabled(status);
        //btnNovo.setEnabled(status);
        btnSalvar.setEnabled(status);
    }
    
    private void configurarCombo(){
        DefaultComboBoxModel m = new DefaultComboBoxModel (new Object[]{
            "Engenharia da computaÃ§Ã£o", "Medicina", "Direito", "Fisioterapia"});
        
        cbxCurso.setModel(m);
    }
    
    private void preencherTabela(){
        
        if(lista != null){
            if(lista.size() > 0){
                DefaultTableModel m = (DefaultTableModel)
                        tabPesquisar.getModel();
                
                for(Aluno a : lista){
                    m.addRow(
                        new Object[]{
                            a.getCodigo(),
                            a.getNome(),
                            a.getCurso(),
                        }
                    );
                }
                tabPesquisar.setModel(m);
            }
        }
    }
    
    private void pesquisarPorNome(String nome){
        if (nome.isEmpty()){
            preencherTabela();
        }else{
            
            if (lista != null){
                if (lista.size() > 0){
                    configurarTabela();
                    DefaultTableModel m = (DefaultTableModel) tabPesquisar.getModel();
                    for(Aluno a : lista){
                        
                        if (a.getNome().toUpperCase().contains(nome.toUpperCase())){
                            m.addRow(
                                    new Object[]{
                                        a.getCodigo(),
                                        a.getNome(),
                                        a.getCurso()
                                    }
                            );
                        }
                    }
                    tabPesquisar.setModel(m);
                }
            }
        }
    }
    
}
